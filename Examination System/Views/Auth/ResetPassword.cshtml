@model Examination_System.DTOS.ResetPasswordDto
@{
    ViewData["Title"] = "Reset Password";
    Layout = "_AuthLayout";
}

<div class="auth-container">
    <div class="card shadow-lg">
        <div class="card-body p-5">
            <div class="text-center mb-4">
                <i class="fas fa-key" style="font-size: 2.5rem;"></i>
                <h2>@ViewData["Title"]</h2>
                <p class="text-muted">Create a new password</p>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <strong>Error!</strong> Please correct the errors below
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <form asp-action="ResetPassword" method="post" class="needs-validation" novalidate>
                <input type="hidden" name="token" value="@Context.Request.Query["token"]" />
                <input type="hidden" name="email" value="@Context.Request.Query["email"]" />

                <div class="mb-3">
                    <label asp-for="NewPassword" class="form-label">New Password</label>
                    <div class="input-group">
                        <input asp-for="NewPassword" type="password" class="form-control" required
                               pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$">
                        <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <small class="form-text text-muted">8+ chars with uppercase, lowercase, and number</small>
                    <span asp-validation-for="NewPassword" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control" required>
                    <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                </div>

                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-save"></i> Reset Password
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Password toggle
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordField = document.getElementById('NewPassword');
            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
            this.innerHTML = type === 'password'
                ? '<i class="fas fa-eye"></i>'
                : '<i class="fas fa-eye-slash"></i>';
        });

        // Form validation
        (() => {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation')

            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}