// <auto-generated />
using System;
using Examination_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examination_System.Migrations
{
    [DbContext(typeof(Exam_sysContext))]
    partial class Exam_sysContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Branche_Dept", b =>
                {
                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.HasKey("branch_id", "dept_id")
                        .HasName("PK__Branche___B8945249DCE80468");

                    b.HasIndex("dept_id");

                    b.ToTable("Branche_Dept", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.Branch", b =>
                {
                    b.Property<int>("branch_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("branch_id"));

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("location")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("branch_id")
                        .HasName("PK__Branches__E55E37DE0C6F72E1");

                    b.HasIndex("ManagerId");

                    b.HasIndex("location")
                        .IsUnique()
                        .HasFilter("[location] IS NOT NULL");

                    b.HasIndex("name")
                        .IsUnique()
                        .HasFilter("[name] IS NOT NULL");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Examination_System.Models.Branch_Dept", b =>
                {
                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("branch_id", "dept_id")
                        .HasName("PK_Branch_Dept");

                    b.HasIndex("dept_id");

                    b.HasIndex("branch_id", "dept_id")
                        .IsUnique();

                    b.ToTable("Branch_Dept");
                });

            modelBuilder.Entity("Examination_System.Models.Comment", b =>
                {
                    b.Property<int>("intakeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intakeNo"));

                    b.Property<string>("comments")
                        .HasColumnType("text");

                    b.Property<int?>("crsid")
                        .HasColumnType("int");

                    b.Property<string>("grade")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("stdid")
                        .HasColumnType("int");

                    b.HasKey("intakeNo")
                        .HasName("PK__Comments__0F6969FA8DE558D4");

                    b.HasIndex("crsid");

                    b.HasIndex("stdid");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Examination_System.Models.Department", b =>
                {
                    b.Property<int>("dept_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dept_id"));

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("dept_id")
                        .HasName("PK__Departme__DCA659745EFD4017");

                    b.HasIndex("ManagerId");

                    b.HasIndex("name")
                        .IsUnique()
                        .HasFilter("[name] IS NOT NULL");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Examination_System.Models.Exam", b =>
                {
                    b.Property<int>("Exid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Exid"));

                    b.Property<int>("branchid")
                        .HasColumnType("int");

                    b.Property<int?>("crsid")
                        .HasColumnType("int");

                    b.Property<int>("deptid")
                        .HasColumnType("int");

                    b.Property<int?>("duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("endat")
                        .HasColumnType("datetime");

                    b.Property<int?>("insid")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("startat")
                        .HasColumnType("datetime");

                    b.HasKey("Exid")
                        .HasName("PK__Exam__36723235AB8F771D");

                    b.HasIndex("branchid");

                    b.HasIndex("crsid");

                    b.HasIndex("deptid");

                    b.HasIndex("insid");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("Examination_System.Models.Instructor", b =>
                {
                    b.Property<int>("insid")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("jobTitle")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("salary")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("insid")
                        .HasName("PK__Instruct__116B52F3D65ACC47");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("Examination_System.Models.Permission", b =>
                {
                    b.Property<int>("PeriD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriD"));

                    b.Property<string>("PerTitle")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("PeriD")
                        .HasName("PK__Permissi__49641868BC4F7E2B");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Examination_System.Models.Question_Bank", b =>
                {
                    b.Property<int>("QID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QID"));

                    b.Property<int?>("crsid")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("mark")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("type")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("QID")
                        .HasName("PK__Question__CAB147CB08B6EB5D");

                    b.HasIndex("crsid");

                    b.ToTable("Question_Bank");
                });

            modelBuilder.Entity("Examination_System.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleTitle")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE1AE63B84D8");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Examination_System.Models.Student", b =>
                {
                    b.Property<int>("stdid")
                        .HasColumnType("int");

                    b.HasKey("stdid")
                        .HasName("PK__Student__BA09E293A3A9E8B5");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Examination_System.Models.Student_Exam", b =>
                {
                    b.Property<int>("stdid")
                        .HasColumnType("int");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("stdid", "ExamId")
                        .HasName("PK__Student___D89EB08F995384E9");

                    b.HasIndex("ExamId");

                    b.ToTable("Student_Exam");
                });

            modelBuilder.Entity("Examination_System.Models.Student_answer", b =>
                {
                    b.Property<int>("stdid")
                        .HasColumnType("int");

                    b.Property<int>("ansid")
                        .HasColumnType("int");

                    b.Property<int>("qid")
                        .HasColumnType("int");

                    b.Property<int>("examId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("stdid", "ansid", "qid", "examId")
                        .HasName("PK__Student___2D43AD6563D95B27");

                    b.HasIndex("ansid");

                    b.HasIndex("examId");

                    b.HasIndex("qid");

                    b.ToTable("Student_answer");
                });

            modelBuilder.Entity("Examination_System.Models.Student_course", b =>
                {
                    b.Property<int>("stdid")
                        .HasColumnType("int");

                    b.Property<int>("crsid")
                        .HasColumnType("int");

                    b.Property<string>("comments")
                        .HasColumnType("text");

                    b.Property<string>("grade")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("stdid", "crsid")
                        .HasName("PK__Student___80123E60AADD987E");

                    b.HasIndex("crsid");

                    b.ToTable("Student_course");
                });

            modelBuilder.Entity("Examination_System.Models.Topic", b =>
                {
                    b.Property<int>("topicid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("topicid"));

                    b.Property<int?>("crsid")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("topicid")
                        .HasName("PK__Topics__7C3F7559076BAE60");

                    b.HasIndex("crsid");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Examination_System.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("branch_id")
                        .HasColumnType("int");

                    b.Property<int?>("dept_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("phone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("st_city")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("id")
                        .HasName("PK__Users__3213E83F8B9D238A");

                    b.HasIndex("branch_id");

                    b.HasIndex("dept_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Examination_System.Models.answer", b =>
                {
                    b.Property<int>("ansid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ansid"));

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("quesid")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ansid")
                        .HasName("PK__answers__2626EE586D8F3B74");

                    b.HasIndex("quesid");

                    b.ToTable("answers");
                });

            modelBuilder.Entity("Examination_System.Models.course", b =>
                {
                    b.Property<int>("crsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("crsid"));

                    b.Property<string>("crsname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("crsid")
                        .HasName("PK__courses__A1BDCF3284EBE03C");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("Examination_System.Models.course_dept", b =>
                {
                    b.Property<int>("crsid")
                        .HasColumnType("int");

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.Property<int>("insid")
                        .HasColumnType("int");

                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("crsid", "dept_id", "insid", "branch_id")
                        .HasName("PK__course_d__73989414A190A2A8");

                    b.HasIndex("branch_id");

                    b.HasIndex("dept_id");

                    b.HasIndex("insid");

                    b.ToTable("course_dept");
                });

            modelBuilder.Entity("Permission_Role", b =>
                {
                    b.Property<int>("PeriD")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("PeriD", "RoleID")
                        .HasName("PK__Permissi__F1CBB48B4D1567ED");

                    b.HasIndex("RoleID");

                    b.ToTable("Permission_Role", (string)null);
                });

            modelBuilder.Entity("User_Role", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserID", "RoleId")
                        .HasName("PK__User_Rol__AF27604D4E94EA31");

                    b.HasIndex("RoleId");

                    b.ToTable("User_Role", (string)null);
                });

            modelBuilder.Entity("question_Exam", b =>
                {
                    b.Property<int>("QID")
                        .HasColumnType("int");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.HasKey("QID", "ExamId")
                        .HasName("PK__question__A82615D759C41BD1");

                    b.HasIndex("ExamId");

                    b.ToTable("question_Exam", (string)null);
                });

            modelBuilder.Entity("Branche_Dept", b =>
                {
                    b.HasOne("Examination_System.Models.Branch", null)
                        .WithMany()
                        .HasForeignKey("branch_id")
                        .IsRequired()
                        .HasConstraintName("FK__Branche_D__branc__2E1BDC42");

                    b.HasOne("Examination_System.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("dept_id")
                        .IsRequired()
                        .HasConstraintName("FK__Branche_D__dept___2F10007B");
                });

            modelBuilder.Entity("Examination_System.Models.Branch", b =>
                {
                    b.HasOne("Examination_System.Models.Instructor", "Manager")
                        .WithMany("ManagedBranches")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Examination_System.Models.Branch_Dept", b =>
                {
                    b.HasOne("Examination_System.Models.Branch", "Branch")
                        .WithMany("Branch_Depts")
                        .HasForeignKey("branch_id")
                        .IsRequired()
                        .HasConstraintName("FK_Branch_Dept_Branch");

                    b.HasOne("Examination_System.Models.Department", "Department")
                        .WithMany("Branch_Depts")
                        .HasForeignKey("dept_id")
                        .IsRequired()
                        .HasConstraintName("FK_Branch_Dept_Department");

                    b.Navigation("Branch");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Examination_System.Models.Comment", b =>
                {
                    b.HasOne("Examination_System.Models.course", "crs")
                        .WithMany("Comments")
                        .HasForeignKey("crsid")
                        .HasConstraintName("FK__Comments__crsid__5FB337D6");

                    b.HasOne("Examination_System.Models.Student", "std")
                        .WithMany("Comments")
                        .HasForeignKey("stdid")
                        .HasConstraintName("FK__Comments__stdid__5EBF139D");

                    b.Navigation("crs");

                    b.Navigation("std");
                });

            modelBuilder.Entity("Examination_System.Models.Department", b =>
                {
                    b.HasOne("Examination_System.Models.Instructor", "Manager")
                        .WithMany("ManagedDepartments")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Examination_System.Models.Exam", b =>
                {
                    b.HasOne("Examination_System.Models.Branch", "branch")
                        .WithMany()
                        .HasForeignKey("branchid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_System.Models.course", "crs")
                        .WithMany("Exams")
                        .HasForeignKey("crsid")
                        .HasConstraintName("FK__Exam__crsid__440B1D61");

                    b.HasOne("Examination_System.Models.Department", "department")
                        .WithMany()
                        .HasForeignKey("deptid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_System.Models.Instructor", "ins")
                        .WithMany("Exams")
                        .HasForeignKey("insid")
                        .HasConstraintName("FK__Exam__insid__44FF419A");

                    b.Navigation("branch");

                    b.Navigation("crs");

                    b.Navigation("department");

                    b.Navigation("ins");
                });

            modelBuilder.Entity("Examination_System.Models.Instructor", b =>
                {
                    b.HasOne("Examination_System.Models.User", "ins")
                        .WithOne("Instructor")
                        .HasForeignKey("Examination_System.Models.Instructor", "insid")
                        .IsRequired()
                        .HasConstraintName("FK__Instructo__insid__398D8EEE");

                    b.Navigation("ins");
                });

            modelBuilder.Entity("Examination_System.Models.Question_Bank", b =>
                {
                    b.HasOne("Examination_System.Models.course", "crs")
                        .WithMany("Question_Banks")
                        .HasForeignKey("crsid")
                        .HasConstraintName("FK__Question___crsid__4AB81AF0");

                    b.Navigation("crs");
                });

            modelBuilder.Entity("Examination_System.Models.Student", b =>
                {
                    b.HasOne("Examination_System.Models.User", "std")
                        .WithOne("Student")
                        .HasForeignKey("Examination_System.Models.Student", "stdid")
                        .IsRequired()
                        .HasConstraintName("FK__Student__stdid__5441852A");

                    b.Navigation("std");
                });

            modelBuilder.Entity("Examination_System.Models.Student_Exam", b =>
                {
                    b.HasOne("Examination_System.Models.Exam", "Exam")
                        .WithMany("Student_Exams")
                        .HasForeignKey("ExamId")
                        .IsRequired()
                        .HasConstraintName("FK__Student_E__ExamI__5BE2A6F2");

                    b.HasOne("Examination_System.Models.Student", "std")
                        .WithMany("Student_Exams")
                        .HasForeignKey("stdid")
                        .IsRequired()
                        .HasConstraintName("FK__Student_E__stdid__5AEE82B9");

                    b.Navigation("Exam");

                    b.Navigation("std");
                });

            modelBuilder.Entity("Examination_System.Models.Student_answer", b =>
                {
                    b.HasOne("Examination_System.Models.answer", "ans")
                        .WithMany("Student_answers")
                        .HasForeignKey("ansid")
                        .IsRequired()
                        .HasConstraintName("FK__Student_a__ansid__6383C8BA");

                    b.HasOne("Examination_System.Models.Exam", "exam")
                        .WithMany("Student_answers")
                        .HasForeignKey("examId")
                        .IsRequired()
                        .HasConstraintName("FK__Student_a__examI__656C112C");

                    b.HasOne("Examination_System.Models.Question_Bank", "qidNavigation")
                        .WithMany("Student_answers")
                        .HasForeignKey("qid")
                        .IsRequired()
                        .HasConstraintName("FK__Student_ans__qid__6477ECF3");

                    b.HasOne("Examination_System.Models.Student", "std")
                        .WithMany("Student_answers")
                        .HasForeignKey("stdid")
                        .IsRequired()
                        .HasConstraintName("FK__Student_a__stdid__628FA481");

                    b.Navigation("ans");

                    b.Navigation("exam");

                    b.Navigation("qidNavigation");

                    b.Navigation("std");
                });

            modelBuilder.Entity("Examination_System.Models.Student_course", b =>
                {
                    b.HasOne("Examination_System.Models.course", "crs")
                        .WithMany("Student_courses")
                        .HasForeignKey("crsid")
                        .IsRequired()
                        .HasConstraintName("FK__Student_c__crsid__5812160E");

                    b.HasOne("Examination_System.Models.Student", "std")
                        .WithMany("Student_courses")
                        .HasForeignKey("stdid")
                        .IsRequired()
                        .HasConstraintName("FK__Student_c__stdid__571DF1D5");

                    b.Navigation("crs");

                    b.Navigation("std");
                });

            modelBuilder.Entity("Examination_System.Models.Topic", b =>
                {
                    b.HasOne("Examination_System.Models.course", "crs")
                        .WithMany("Topics")
                        .HasForeignKey("crsid")
                        .HasConstraintName("FK__Topics__crsid__47DBAE45");

                    b.Navigation("crs");
                });

            modelBuilder.Entity("Examination_System.Models.User", b =>
                {
                    b.HasOne("Examination_System.Models.Branch", "branch")
                        .WithMany("Users")
                        .HasForeignKey("branch_id")
                        .HasConstraintName("FK__Users__branch_id__32E0915F");

                    b.HasOne("Examination_System.Models.Department", "dept")
                        .WithMany("Users")
                        .HasForeignKey("dept_id")
                        .HasConstraintName("FK__Users__dept_id__31EC6D26");

                    b.Navigation("branch");

                    b.Navigation("dept");
                });

            modelBuilder.Entity("Examination_System.Models.answer", b =>
                {
                    b.HasOne("Examination_System.Models.Question_Bank", "ques")
                        .WithMany("answers")
                        .HasForeignKey("quesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__answers__quesid__5165187F");

                    b.Navigation("ques");
                });

            modelBuilder.Entity("Examination_System.Models.course_dept", b =>
                {
                    b.HasOne("Examination_System.Models.Branch", "branch")
                        .WithMany("course_depts")
                        .HasForeignKey("branch_id")
                        .IsRequired()
                        .HasConstraintName("FK__course_de__branc__412EB0B6");

                    b.HasOne("Examination_System.Models.course", "crs")
                        .WithMany("course_depts")
                        .HasForeignKey("crsid")
                        .IsRequired()
                        .HasConstraintName("FK__course_de__crsid__3E52440B");

                    b.HasOne("Examination_System.Models.Department", "dept")
                        .WithMany("course_depts")
                        .HasForeignKey("dept_id")
                        .IsRequired()
                        .HasConstraintName("FK__course_de__dept___3F466844");

                    b.HasOne("Examination_System.Models.Instructor", "ins")
                        .WithMany("course_depts")
                        .HasForeignKey("insid")
                        .IsRequired()
                        .HasConstraintName("FK__course_de__insid__403A8C7D");

                    b.Navigation("branch");

                    b.Navigation("crs");

                    b.Navigation("dept");

                    b.Navigation("ins");
                });

            modelBuilder.Entity("Permission_Role", b =>
                {
                    b.HasOne("Examination_System.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PeriD")
                        .IsRequired()
                        .HasConstraintName("FK__Permissio__PeriD__6C190EBB");

                    b.HasOne("Examination_System.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .IsRequired()
                        .HasConstraintName("FK__Permissio__RoleI__6D0D32F4");
                });

            modelBuilder.Entity("User_Role", b =>
                {
                    b.HasOne("Examination_System.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Role__RoleI__693CA210");

                    b.HasOne("Examination_System.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserID")
                        .IsRequired()
                        .HasConstraintName("FK__User_Role__UserI__68487DD7");
                });

            modelBuilder.Entity("question_Exam", b =>
                {
                    b.HasOne("Examination_System.Models.Exam", null)
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .IsRequired()
                        .HasConstraintName("FK__question___ExamI__4E88ABD4");

                    b.HasOne("Examination_System.Models.Question_Bank", null)
                        .WithMany()
                        .HasForeignKey("QID")
                        .IsRequired()
                        .HasConstraintName("FK__question_Ex__QID__4D94879B");
                });

            modelBuilder.Entity("Examination_System.Models.Branch", b =>
                {
                    b.Navigation("Branch_Depts");

                    b.Navigation("Users");

                    b.Navigation("course_depts");
                });

            modelBuilder.Entity("Examination_System.Models.Department", b =>
                {
                    b.Navigation("Branch_Depts");

                    b.Navigation("Users");

                    b.Navigation("course_depts");
                });

            modelBuilder.Entity("Examination_System.Models.Exam", b =>
                {
                    b.Navigation("Student_Exams");

                    b.Navigation("Student_answers");
                });

            modelBuilder.Entity("Examination_System.Models.Instructor", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("ManagedBranches");

                    b.Navigation("ManagedDepartments");

                    b.Navigation("course_depts");
                });

            modelBuilder.Entity("Examination_System.Models.Question_Bank", b =>
                {
                    b.Navigation("Student_answers");

                    b.Navigation("answers");
                });

            modelBuilder.Entity("Examination_System.Models.Student", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Student_Exams");

                    b.Navigation("Student_answers");

                    b.Navigation("Student_courses");
                });

            modelBuilder.Entity("Examination_System.Models.User", b =>
                {
                    b.Navigation("Instructor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Examination_System.Models.answer", b =>
                {
                    b.Navigation("Student_answers");
                });

            modelBuilder.Entity("Examination_System.Models.course", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Exams");

                    b.Navigation("Question_Banks");

                    b.Navigation("Student_courses");

                    b.Navigation("Topics");

                    b.Navigation("course_depts");
                });
#pragma warning restore 612, 618
        }
    }
}
